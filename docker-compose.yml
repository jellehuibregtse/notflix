services:
  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: yarn start:dev gateway
    env_file:
      - ./apps/gateway/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '8000:8000'

  web:
    build:
      context: ./web
      target: development
    command: yarn start
    volumes:
      - ./web:/usr/src/app
      - /usr/src/app/node_modules

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: yarn start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  movies:
    build:
      context: .
      dockerfile: ./apps/movies/Dockerfile
      target: development
    command: yarn start:dev movies
    env_file:
      - ./apps/movies/.env
    depends_on:
      - postgres
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  account:
    build:
      context: .
      dockerfile: ./apps/account/Dockerfile
      target: development
    command: yarn start:dev account
    env_file:
      - ./apps/account/.env
    depends_on:
      - postgres
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  rabbitmq:
    image: rabbitmq

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - '5432:5432'
    restart: unless-stopped

volumes:
  postgres: {}
