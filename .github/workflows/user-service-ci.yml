name: User service CI

on:
  push:
    paths:
      - user-service/**

jobs:
  eslint:
    name: Check linting and formatting
    runs-on: ubuntu-latest
    env:
      working-directory: ./user-service
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        working-directory: ${{ env.working-directory }}

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: |
          yarn config set ignore-engines true
          yarn
        working-directory: ${{ env.working-directory }}

      - name: Check linting
        run: yarn lint:check
        working-directory: ${{ env.working-directory }}

      - name: Check formatting
        run: yarn format:check
        working-directory: ${{ env.working-directory }}

  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      working-directory: ./user-service
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        run: |
          yarn config set ignore-engines true
          yarn
        working-directory: ${{ env.working-directory }}

      - name: Build
        run: |
          yarn build
        working-directory: ${{ env.working-directory }}

  test:
    name: Tests
    runs-on: ubuntu-latest
    env:
      working-directory: ./user-service
      DB_NAME_TEST: user-service-test
      DB_USER: postgres
      DB_PASSWORD: postgres
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Init docker
        run: docker-compose up -d
        working-directory: ${{ env.working-directory }}

      - name: Sleep for 10s
        uses: juliangruber/sleep-action@v1
        with:
          time: 10s

      - name: Install
        run: |
          yarn config set ignore-engines true
          yarn
        working-directory: ${{ env.working-directory }}

      - name: Test
        run: |
          yarn test:cov
        working-directory: ${{ env.working-directory }}

      - name: Teardown docker
        run: docker-compose down
        working-directory: ${{ env.working-directory }}
